import React from 'react';
export declare type PopoverPlacement = 'auto' | 'auto-start' | 'auto-end' | 'top' | 'bottom' | 'right' | 'left' | 'top-start' | 'top-end' | 'bottom-start' | 'bottom-end' | 'right-start' | 'right-end' | 'left-start' | 'left-end';
export interface PopoverProps {
    children: (attrs: any) => React.ReactNode;
    closeOnClick?: boolean;
    isOpen?: boolean;
    launcher?: React.ReactElement;
    launcherRef?: any;
    offset?: {
        skidding: number;
        distance: number;
    };
    onClickOutside?: () => void;
    placement?: PopoverPlacement;
    popperOptions?: any;
    zIndex?: number;
    trigger?: 'mouseenter focus' | 'click' | 'focusin' | 'mouseenter click' | 'manual';
}
/**
 * Headless popover. Renders the children as its content when the popover is open.
 *
 * You can either pass the launcher component as a property or the ref of the launcher,
 * however one of those is required.
 *
 * @example
 * <Popover launcherRef={bellRef}>
 *   {() => <p>Content</p>}
 * <Popover>
 */
export default function Popover({ closeOnClick, children, isOpen, launcher, launcherRef, offset, onClickOutside, placement, popperOptions, zIndex, trigger, }: PopoverProps): JSX.Element;
