import { DeepPartial } from '../../types/DeepPartial';
import IRemoteNotificationPreferences, { CategoryPreference } from '../../types/IRemoteNotificationPreferences';
import NotificationPreferencesRepository from './NotificationPreferencesRepository';
interface NotificationPreferences extends IRemoteNotificationPreferences {
    lastFetchedAt?: number;
    /**
     * Fetch the notification preferences for the current user from the MagicBell
     * server.
     */
    fetch: () => Promise<void>;
    /**
     * Update the notification preferences for the current user.
     *
     * @preferences Object containing the new preferences.
     */
    save: (preferences: {
        categories: DeepPartial<CategoryPreference>;
    }) => Promise<void>;
    _repository: NotificationPreferencesRepository;
}
/**
 * Remote notification preferences store. It contains all preferences stored in
 * MagicBell servers for this user.
 *
 * @example
 * const { fetch } = useNotificationPreferences();
 * useEffect(() => fetch(), []);
 */
declare const useNotificationPreferences: import("zustand").UseBoundStore<NotificationPreferences, import("zustand").StoreApi<NotificationPreferences>>;
export default useNotificationPreferences;
